// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: protobuf/busstatus.proto
package th.in.whs.ku.bus.protobuf;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class BusStatus extends Message {

  public static final Integer DEFAULT_ID = 0;
  public static final Integer DEFAULT_LINEID = 0;
  public static final String DEFAULT_NAME = "";
  public static final String DEFAULT_LINENAME = "";
  public static final Long DEFAULT_ESTIMATED_TIME = 0L;
  public static final Long DEFAULT_ESTIMATED_TIME_SINCE = 0L;

  @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
  public final Integer id;

  @ProtoField(tag = 2, type = UINT32, label = REQUIRED)
  public final Integer lineid;

  @ProtoField(tag = 3, type = STRING)
  public final String name;

  @ProtoField(tag = 4, type = STRING)
  public final String linename;

  @ProtoField(tag = 5, type = UINT64)
  public final Long estimated_time;

  @ProtoField(tag = 50, type = UINT64)
  public final Long estimated_time_since;

  public BusStatus(Integer id, Integer lineid, String name, String linename, Long estimated_time, Long estimated_time_since) {
    this.id = id;
    this.lineid = lineid;
    this.name = name;
    this.linename = linename;
    this.estimated_time = estimated_time;
    this.estimated_time_since = estimated_time_since;
  }

  private BusStatus(Builder builder) {
    this(builder.id, builder.lineid, builder.name, builder.linename, builder.estimated_time, builder.estimated_time_since);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BusStatus)) return false;
    BusStatus o = (BusStatus) other;
    return equals(id, o.id)
        && equals(lineid, o.lineid)
        && equals(name, o.name)
        && equals(linename, o.linename)
        && equals(estimated_time, o.estimated_time)
        && equals(estimated_time_since, o.estimated_time_since);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (lineid != null ? lineid.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (linename != null ? linename.hashCode() : 0);
      result = result * 37 + (estimated_time != null ? estimated_time.hashCode() : 0);
      result = result * 37 + (estimated_time_since != null ? estimated_time_since.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<BusStatus> {

    public Integer id;
    public Integer lineid;
    public String name;
    public String linename;
    public Long estimated_time;
    public Long estimated_time_since;

    public Builder() {
    }

    public Builder(BusStatus message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.lineid = message.lineid;
      this.name = message.name;
      this.linename = message.linename;
      this.estimated_time = message.estimated_time;
      this.estimated_time_since = message.estimated_time_since;
    }

    public Builder id(Integer id) {
      this.id = id;
      return this;
    }

    public Builder lineid(Integer lineid) {
      this.lineid = lineid;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder linename(String linename) {
      this.linename = linename;
      return this;
    }

    public Builder estimated_time(Long estimated_time) {
      this.estimated_time = estimated_time;
      return this;
    }

    public Builder estimated_time_since(Long estimated_time_since) {
      this.estimated_time_since = estimated_time_since;
      return this;
    }

    @Override
    public BusStatus build() {
      checkRequiredFields();
      return new BusStatus(this);
    }
  }
}
